享元模式：
    相关知识：
        安全实体：被权限系统检测的对象，其实也就是用户要访问的数据
        权限：就是操作权限，比如查看，修改等
        安全实体和权限一起描述才有意义

        授权：分配权限给用户
        验证：验证某用户是否有某权限，是权限的匹配过程

        权限的继承性：多个安全实体有包含关系的时候，有访问内部的实体权限的时候，肯定有访问外部实体的权限
                    但是可以访问外部实体不一定有内部实体的访问权限。比如大楼与内部房间的关系

    场景是：
        需要缓存的数据中存在大量细粒度对象，而且存在大量重复数据（每个对象只有少量字段不同），严重耗费内存
        如果缓存的对象的属性值是经常变动的，就不适合缓存了，因为要考虑缓存数据与真实数据同步的问题

    定义是：
        运用共享技术有效地支持大量细粒度对象

    解释是：
        找出被缓存的对象中，哪些数据是固定的，哪些是经常变化的。
        真正要缓存的是固定的数据，称为对象的内部状态。变化的称为对象的外部状态
        把内部状态分离出来进行共享，称为享元

    本质是：
        分离与共享（把变与不变分离，共享不变的部分）

    实现是：
        参与的对象属性分为内部状态和外部状态
        享元就是内部状态。
        享元也要进行分类，一类是共享的，一类是不共享的，他们有同一个接口基类，接收外部状态
        所以一个对象可能是“共享享元+外部状态”，也可能是“非共享享元+外部状态”
        使用享元工厂来创建这些享元对象，为了复用对象，内部需要一个map来维护对象，通过key来判断对象是否已经存在

        存疑...
