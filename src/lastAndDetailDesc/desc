这是一个关于设计模式最后的代码举例和说明：
    1：代码举例
    2：每个模式内部会介绍模式的场景，本质，优缺点等
    3：结合代码更容易体会模式的目的



根本原则：

    开闭原则：
        易扩展，不修改源代码。使用接口和抽象类


    单一职责原则：
        避免因业务改变导致修改源码。每个类只有单一的职责


    里氏替换原则：
        子类可以扩展父类，尽量不要重写父类方法。这样就避免在使用是因重写父类方法出现错误


    依赖倒转原则：
        尽量是与具体类的上层接口交互，而不是与具体对象直接交互


    接口隔离原则：
        接口的方法，其子类一定要用到；如果存在子类用不到的，就将接口分离成多个


    合成复用原则：
        尽量优先使用聚合的方式，第二选择才是继承


    迪米特法则：
        最核心的是弱耦合。避免因为耦合度高，导致一个类改变的时候导致关联的其他类发生改变

        低耦合，高内聚。只与朋友关联：方法参数类，返回值类，全局变量类才算是朋友类

        简单的说，就是关联，引入的类越少越好。

        避免过度使用，造成类过多








