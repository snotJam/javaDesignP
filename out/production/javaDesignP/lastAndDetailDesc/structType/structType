这一部分是关于结构型的模式，也就是为了便于管理代码或者统一处理逻辑，多是用其他类来进行管理或者作为中间人存在

感觉这个模式下多是：复用，扩展，中间人持有调用

适配器模式：
    复用已存在的类的功能，就提供一个类，直接持有已存在的对象，内部调用其方法


桥接模式：
    http://www.jasongj.com/design_pattern/bridge/
    当多个类按照不同的标准进行划分，避免类过多，对接口进行扩展


组合模式：
    当对象之间的关系有整体与部分的关系，可以构建为树形结构的时候
    使用组合模式只是为了统一使用方式


装饰者模式：
    需要动态的为对象进行功能扩展，且功能可以动态进行组合的时候
    装饰者和被装饰者有同一个基类


外观模式：
    使用一个中间类作为管理，外部调用这个类，这个类内部持有子系统对象调用子系统的方法


代理模式：
    代理类与目标类的关系就像：我持有它，代理它，调用他


享元模式：
    工厂+Map存储来管理享元对象，以达到对象复用的效果



